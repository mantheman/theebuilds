--- cfg-mplayer.h.org	2010-12-01 13:47:59.000000000 -0500
+++ cfg-mplayer.h	2010-12-01 13:49:56.000000000 -0500
@@ -38,6 +38,8 @@
 #include "sub/unrar_exec.h"
 
 
+extern int growing_file_pause_enable;
+
 const m_option_t vd_conf[]={
     {"help", "Use MPlayer with an appropriate video file instead of live partners to avoid vd.\n", CONF_TYPE_PRINT, CONF_NOCFG|CONF_GLOBAL, 0, 0, NULL},
     {NULL, NULL, 0, 0, 0, 0, NULL}
@@ -346,6 +348,8 @@
     {"tvscan", "MPlayer was compiled without TV interface support.\n", CONF_TYPE_PRINT, 0, 0, 0, NULL},
 #endif /* CONFIG_TV */
 
+    {"livepause", &growing_file_pause_enable, CONF_TYPE_INT, CONF_RANGE, 0, 60, NULL},
+
     {"list-properties", &list_properties, CONF_TYPE_FLAG, CONF_GLOBAL, 0, 1, NULL},
     {"identify", &mp_msg_levels[MSGT_IDENTIFY], CONF_TYPE_FLAG, CONF_GLOBAL, 0, MSGL_V, NULL},
     {"-help", help_text, CONF_TYPE_PRINT, CONF_NOCFG|CONF_GLOBAL, 0, 0, NULL},
--- libmpdemux/demuxer.c.org	2010-12-01 13:48:03.000000000 -0500
+++ libmpdemux/demuxer.c	2010-12-01 15:13:55.000000000 -0500
@@ -190,6 +190,10 @@
     NULL
 };
 
+
+double first_pts_hack = 0;
+int growing_file_pause_enable=0;
+
 void free_demuxer_stream(demux_stream_t *ds)
 {
     ds_free_packs(ds);
@@ -896,6 +900,23 @@
         if (!demux_fill_buffer(demux, ds))
             return MP_NOPTS_VALUE;
     }
+    if (growing_file_pause_enable)
+    {
+      if (ds && ds->first)
+      {
+           if (first_pts_hack == 0)
+               first_pts_hack = ds->first->pts;
+           else if (ds->first->pts <  first_pts_hack)
+               first_pts_hack = ds->first->pts;
+      }
+      if (ds && ds->current)
+      {
+           if (first_pts_hack == 0)
+               first_pts_hack = ds->current->pts;
+           else if (ds->first->pts <  first_pts_hack)
+               first_pts_hack = ds->current->pts;
+      }
+    }
     // take pts from "current" if we never read from it.
     if (ds->current && !ds->buffer_pos)
         return ds->current->pts;
@@ -1463,6 +1484,11 @@
         get_time_ans = demuxer->stream_pts;
     else if (sh_video)
         get_time_ans = sh_video->pts;
+    if (growing_file_pause_enable)
+    {
+      if (get_time_ans - first_pts_hack > 0)
+          return (int)get_time_ans - first_pts_hack;
+    }
     return (int) get_time_ans;
 }
 
--- mplayer.c.org	2010-12-01 13:48:08.000000000 -0500
+++ mplayer.c	2010-12-01 15:11:01.000000000 -0500
@@ -148,6 +152,9 @@
 double start_pts = MP_NOPTS_VALUE;
 char *heartbeat_cmd;
 
+extern double first_pts_hack;
+extern int growing_file_pause_enable;
+
 #define ROUND(x) ((int)((x)<0 ? (x)-0.5 : (x)+0.5))
 
 
@@ -2674,7 +2686,80 @@
 // return -1 if seek failed (non-seekable stream?), 0 otherwise
 static int seek(MPContext *mpctx, double amount, int style)
 {
+    double time_to_end = 0;
     current_module = "seek";
+
+    if (growing_file_pause_enable)
+    {
+      double amount_org = amount;
+      stream_t *st = mpctx->stream;
+      off_t sz = 0;
+
+      if (st)
+      {
+          (*st->control)(st,STREAM_CTRL_GET_SIZE, &sz);
+          if (sz > mpctx->demuxer->movi_end)
+             mpctx->demuxer->movi_end = sz;
+      }
+
+      if (st && amount > 0 && mpctx->demuxer->movi_end > mpctx->demuxer->filepos)
+      {
+        sh_video_t *sh_video = mpctx->demuxer->video->sh;
+
+        if (sh_video)
+        {
+            double new_pts = sh_video->pts - first_pts_hack;
+            double seek_1_second = ((double)mpctx->demuxer->filepos / new_pts);
+            double size_now_to_end = (double)(mpctx->demuxer->movi_end - mpctx->demuxer->filepos);
+            time_to_end = size_now_to_end/seek_1_second;
+
+            printf("..... time_to_end: %0.2f -------- \n", time_to_end);
+
+            if (time_to_end < 5)
+            {
+                do
+                {
+                    (*st->control)(st,STREAM_CTRL_GET_SIZE, &sz);
+
+                    if (sz > mpctx->demuxer->movi_end)
+                    {
+                        mpctx->demuxer->movi_end = sz;
+                    }
+                    else if (sz == mpctx->demuxer->movi_end)
+                    {
+                        sleep(.200);
+                        continue;
+                    }
+                    size_now_to_end = (double)(mpctx->demuxer->movi_end - mpctx->demuxer->filepos);
+                    time_to_end = size_now_to_end/seek_1_second;
+                    set_osd_msg(OSD_MSG_TEXT, 1, osd_duration, "LIVE: %0.2f", time_to_end);
+                }
+                while (time_to_end < 5);
+
+                return -1;
+            }
+
+            if (amount > time_to_end )
+                amount = time_to_end - 5;
+
+//            printf("..... amount to ff: %0.2f -------- %0.2f\n\n\n\n", amount, amount);
+/*
+            if (amount_org > 0 && amount < 0)
+            {
+                printf(".......... Here2\n");
+                set_osd_msg(OSD_MSG_TEXT, 1, osd_duration, "LIVE: %0.2f", time_to_end);
+                return -1;
+            }
+*/
+        }
+      }
+      if (time_to_end < amount && (time_to_end - amount < 5))
+      {
+                set_osd_msg(OSD_MSG_TEXT, 1, osd_duration, "LIVE: %0.2f", time_to_end);
+                return -1;
+      }
+    }
+
     if (demux_seek(mpctx->demuxer, amount, audio_delay, style) == 0)
 	return -1;
 
