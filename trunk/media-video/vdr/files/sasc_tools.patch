--- tools.c.org	2008-01-25 22:44:17.000000000 -0500
+++ tools.c	2008-01-25 22:45:58.000000000 -0500
@@ -87,6 +87,13 @@
   safe_write(filedes, &c, sizeof(c));
 }
 
+char *skipspace(const char *s)
+{
+  while (*s && isspace(*s))
+        s++;
+  return (char *)s;
+}
+
 int WriteAllOrNothing(int fd, const uchar *Data, int Length, int TimeoutMs, int RetryMs)
 {
   int written = 0;
--- tools.h.org	2008-01-25 22:52:08.000000000 -0500
+++ tools.h	2008-01-25 22:52:27.000000000 -0500
@@ -173,14 +173,7 @@
 char *strn0cpy(char *dest, const char *src, size_t n);
 char *strreplace(char *s, char c1, char c2);
 char *strreplace(char *s, const char *s1, const char *s2); ///< re-allocates 's' and deletes the original string if necessary!
-inline char *skipspace(const char *s)
-{
-  if ((uchar)*s > ' ') // most strings don't have any leading space, so handle this case as fast as possible
-     return (char *)s;
-  while (*s && (uchar)*s <= ' ') // avoiding isspace() here, because it is much slower
-        s++;
-  return (char *)s;
-}
+char *skipspace(const char *s);
 char *stripspace(char *s);
 char *compactspace(char *s);
 cString strescape(const char *s, const char *chars);
