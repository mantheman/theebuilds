--- system.c.org	2009-08-20 00:40:52.000000000 -0400
+++ system.c	2009-08-20 00:43:29.000000000 -0400
@@ -173,7 +173,8 @@
         pids->AddPid(pid,0x88,0xFE);
         break;
       case 0x18: // Nagra style (82/83)
-        pids->AddPid(pid,0x82,0xFE);
+        pids->AddPid(pid,0x80,0xFE,0x06); // 0x82, 0x83, 0x84 (mismatching 0x85,0x86,0x87)
+//        pids->AddPid(pid,0x82,0xFE);
         break;
       default:   // default style (82)
         pids->AddPid(pid,0x82,0xFF);
--- systems/cardclient/newcamd.c.org	2009-08-20 00:38:51.000000000 -0400
+++ systems/cardclient/newcamd.c	2009-08-20 00:40:38.000000000 -0400
@@ -434,10 +434,7 @@
         case 0x05: SetCard(new cCardViaccess(&buffer[6+3])); break;
         case 0x0d: SetCard(new cCardCryptoworks(&buffer[6+3])); break;
         case 0x12:
-        case 0x18: if(caId>=0x1801 || caId==0x1234) {
-                     SetCard(new cCardNagra2(&buffer[6+4]));
-                     break;
-                     }
+        case 0x18: SetCard(new cCardNagra2(&buffer[6+4],caId)); break;
                    // fall through to default
         default:
           LBPUT(" (unhandled)");
--- parse.c.org	2009-08-20 00:56:50.000000000 -0400
+++ parse.c	2009-08-20 00:58:44.000000000 -0400
@@ -502,18 +502,63 @@
 
 // -- cCardNagra2 --------------------------------------------------------------
 
-cCardNagra2::cCardNagra2(const unsigned char *a)
+cCardNagra2::cCardNagra2(const unsigned char *a, int caId)
 {
   addr[0]=a[2];
   addr[1]=a[1];
   addr[2]=a[0];
   addr[3]=a[3];
+  card_caId = caId;
+  PRINTF(L_GEN_INFO, "--- Card CAID: 0x%04x : %01x %01x %01x %01x", card_caId,  addr[0], addr[1], addr[2], addr[3]);
 }
 
 bool cCardNagra2::MatchEMM(const unsigned char *data)
 {
-  return data[0]==0x82 || data[0]==0x84 ||
-        (data[0]==0x83 && !memcmp(&data[3],addr,(data[7]==0x10)?3:4));
+  switch(data[0]) {
+    case 0x82:
+      if (card_caId==0x1816)
+      {
+        PRINTF(L_GEN_INFO, "Ignoring Nagra2 EMM-G for card caId 0x%04x", card_caId);
+        return false;
+      }
+      PRINTF(L_GEN_INFO, "Found Nagra2 EMM-G");
+      return true;
+    case 0x84:
+      if (card_caId!=0x1816)
+      {
+        PRINTF(L_GEN_INFO, "Ignoring Nagra3 EMM-G for card caId 0x%04x", card_caId);
+        return false;
+      }
+      if (data[1]==0x70 && data[2]==0x96)
+      {
+        PRINTF(L_GEN_INFO, "Found Nagra3 EMM-G");
+        return true;
+      }
+      break;
+    case 0x83:
+      if (data[1]==0x70 && data[5]==addr[2] && data[4]==addr[1] && data[3]==addr[0])
+      {
+        PRINTF(L_GEN_INFO, "-----------> FOUND EMM-S/U for %01x : %01x : %01x %01x %01x %01x - %01x %01x %01x %01x",
+                            data[1], data[7], data[6], data[5], data[4], data[3], addr[0], addr[1], addr[2], addr[3]);
+      }
+      if (data[1]==0x70 && !memcmp(&data[3],addr,(data[7]==0x10)?3:4))
+      {
+        PRINTF(L_GEN_INFO, "Found Nagra2/3 EMM-%s for CAMID %01x %01x %01x %01x",
+                           (data[7]==0x10 ? "S":"U"), data[6], data[5], data[4], data[3]);
+        return true;
+      }
+//      else
+//        PRINTF(L_GEN_INFO, "Ignoring Nagra2/3 EMM-%s for CAMID %01x %01x %01x %01x",
+//                           (data[7]==0x10 ? "S":"U"), data[6], data[5], data[4], data[3]);
+      break;
+    }
+
+  return false;
+
+//  return data[0]==0x82 || data[0]==0x84 ||
+//        (data[0]==0x83 && data[1]==0x70 && !memcmp(&data[3],addr,(data[7]==0x10)?3:4));
+//  return data[0]==0x82 ||
+//        (data[0]==0x83 && !memcmp(&data[3],addr,(data[7]==0x10)?3:4));
 }
 
 int cCardNagra2::UpdateType(const unsigned char *data)
--- parse.h.org	2009-08-20 00:59:20.000000000 -0400
+++ parse.h	2009-08-20 00:58:23.000000000 -0400
@@ -228,8 +228,9 @@
 class cCardNagra2 : public cCard {
 public:
   unsigned char addr[4];
+  int card_caId;
   //
-  cCardNagra2(const unsigned char *a);
+  cCardNagra2(const unsigned char *a, int caId);
   virtual bool MatchEMM(const unsigned char *data);
   virtual int UpdateType(const unsigned char *data);
   };
