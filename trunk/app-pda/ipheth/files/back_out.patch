--- ipheth-driver/ipheth.c.org	2009-12-31 12:48:15.046288363 -0500
+++ ipheth-driver/ipheth.c	2009-12-31 13:01:20.000000000 -0500
@@ -56,7 +56,6 @@
 #include <linux/workqueue.h>
 
 #define USB_VENDOR_APPLE        0x05ac
-#define USB_PRODUCT_IPHETH     0x1290
 #define USB_PRODUCT_IPHETH_3G   0x1292
 #define USB_PRODUCT_IPHETH_3GS  0x1294
 
@@ -70,7 +69,6 @@
 #define IPHETH_ALT_INTFNUM      1
 
 #define IPHETH_CTRL_ENDP        0x00
-#define IPHETH_CTRL_BUF_SIZE	0x40
 #define IPHETH_CTRL_TIMEOUT     (5 * HZ)
 
 #define IPHETH_CMD_GET_MACADDR   0x00
@@ -80,7 +78,6 @@
 #define IPHETH_CARRIER_ON       0x04
 
 static struct usb_device_id ipheth_table [] = {
-       { USB_DEVICE(USB_VENDOR_APPLE, USB_PRODUCT_IPHETH) },
 	{ USB_DEVICE(USB_VENDOR_APPLE, USB_PRODUCT_IPHETH_3G) },
 	{ USB_DEVICE(USB_VENDOR_APPLE, USB_PRODUCT_IPHETH_3GS) },
 	{ }
@@ -97,12 +94,12 @@
 	struct urb *rx_urb;
 	unsigned char *tx_buf;
 	unsigned char *rx_buf;
-	unsigned char *ctrl_buf;
 	__u8 bulk_in;
 	__u8 bulk_out;
 	struct delayed_work carrier_work;
 };
 
+
 static int ipheth_rx_submit(struct ipheth_device *dev, gfp_t mem_flags);
 
 static int ipheth_alloc_urbs(struct ipheth_device *iphone)
@@ -134,7 +131,6 @@
 	if (rx_buf == NULL)
 		goto error;
 
-
 	iphone->tx_urb = tx_urb;
 	iphone->rx_urb = rx_urb;
 	iphone->tx_buf = tx_buf;
@@ -234,6 +230,7 @@
 static int ipheth_carrier_set(struct ipheth_device *dev)
 {
 	struct usb_device *udev = dev->udev;
+	char buf[1];
 	int retval;
 
 	if ((retval = usb_control_msg(udev, 
@@ -242,13 +239,13 @@
 				      0xc0, /* request type */
 				      0x00, /* value */
 				      0x02, /* index */
-				      dev->ctrl_buf, IPHETH_CTRL_BUF_SIZE,
+				      buf, sizeof(buf),
 				      IPHETH_CTRL_TIMEOUT)) < 0) {
 		err("%s: usb_control_msg: %d", __func__, retval);
 		return retval;
 	}
 
-	if (dev->ctrl_buf[0] == IPHETH_CARRIER_ON)
+	if (buf[0] == IPHETH_CARRIER_ON)
 		netif_carrier_on(dev->net);
 	else
 		netif_carrier_off(dev->net);
@@ -277,18 +274,13 @@
 				 0xc0, /* request type */
 				 0x00, /* value */
 				 0x02, /* index */
-				 dev->ctrl_buf,
-				 IPHETH_CTRL_BUF_SIZE,
+				 net->dev_addr,
+				 sizeof(net->dev_addr),
 				 IPHETH_CTRL_TIMEOUT);
-	if (retval < 0) {
+	if (retval < 0)
 		err("%s: usb_control_msg: %d", __func__, retval);
-	} else if (retval < sizeof(net->dev_addr)) {
-		err("%s: usb_control_msg: short packet: %d bytes", __func__, retval);
-		retval = -EINVAL;
-	} else {
-		memcpy(net->dev_addr, dev->ctrl_buf, sizeof(net->dev_addr));
+	else
 		retval = 0;
-	}
 
 	return retval;
 }
@@ -406,14 +398,16 @@
 	.get_link = ipheth_ethtool_op_get_link
 };
 
-static const struct net_device_ops ipheth_netdev_ops = {
-       .ndo_open = &ipheth_open,
-       .ndo_stop = &ipheth_close,
-       .ndo_start_xmit = &ipheth_tx,
-       .ndo_tx_timeout = &ipheth_tx_timeout,
-       .ndo_get_stats = &ipheth_stats,
+static const struct net_device_ops ipheth_net_dev_ops =
+{
+    .ndo_open = &ipheth_open,
+    .ndo_stop = &ipheth_close,
+    .ndo_start_xmit = &ipheth_tx,
+    .ndo_tx_timeout = &ipheth_tx_timeout,
+    .ndo_get_stats = &ipheth_stats,
 };
 
+
 static int ipheth_probe (struct usb_interface *intf,
 			 const struct usb_device_id *id)
 {
@@ -434,7 +428,8 @@
 	if (!netdev)
 		return -ENOMEM;
 
-	netdev->netdev_ops = &ipheth_netdev_ops;
+        netdev->netdev_ops = &ipheth_net_dev_ops;
+
 	netdev->watchdog_timeo = IPHETH_TX_TIMEOUT;
 
 	dev = netdev_priv(netdev);
@@ -463,12 +458,6 @@
 		goto err_endpoints;
 	}
 
-	dev->ctrl_buf = kmalloc(IPHETH_CTRL_BUF_SIZE, GFP_KERNEL);
-	if (dev->ctrl_buf == NULL) {
-		retval = -ENOMEM;
-		goto err_alloc_ctrl_buf;
-	}
-
 	if ((retval = ipheth_get_macaddr(dev)))
 		goto err_get_macaddr;
 
@@ -497,8 +486,6 @@
 	ipheth_free_urbs(dev);
 err_alloc_urbs:
 err_get_macaddr:
-err_alloc_ctrl_buf:
-	kfree(dev->ctrl_buf);
 err_endpoints:
 	free_netdev(netdev);
 	return retval;
@@ -513,7 +500,6 @@
 		unregister_netdev(dev->net);
 		ipheth_unlink_urbs(dev);
 		ipheth_free_urbs(dev);
-		kfree(dev->ctrl_buf);
 		free_netdev(dev->net);
 	}
 	usb_set_intfdata(intf, NULL);
