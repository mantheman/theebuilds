--- mplayer/stream/stream_file.c.org	2010-12-27 00:17:48.000000000 -0500
+++ mplayer/stream/stream_file.c	2010-12-27 00:23:31.000000000 -0500
@@ -89,8 +89,18 @@
     case STREAM_CTRL_GET_SIZE: {
       off_t size;
 
-      size = lseek(s->fd, 0, SEEK_END);
-      lseek(s->fd, s->pos, SEEK_SET);
+      if (s->url)
+      {
+          struct stat st1;
+          stat(s->url, &st1);
+          size = st1.st_size;
+      }
+      else
+      {
+           size = lseek(s->fd, 0, SEEK_END);
+          lseek(s->fd, s->pos, SEEK_SET);
+      }
+
       if(size != (off_t)-1) {
         *((off_t*)arg) = size;
         return 1;
--- mplayer/libmpdemux/demuxer.c.org	2010-12-27 00:17:38.000000000 -0500
+++ mplayer/libmpdemux/demuxer.c	2010-12-27 00:22:27.000000000 -0500
@@ -177,6 +177,9 @@
     NULL
 };
 
+double first_pts_hack = 0;
+int live_pause_enable=0;
+
 void free_demuxer_stream(demux_stream_t *ds)
 {
     ds_free_packs(ds);
@@ -800,6 +803,25 @@
         if (!demux_fill_buffer(demux, ds))
             return MP_NOPTS_VALUE;
     }
+
+    if (live_pause_enable && !first_pts_hack)
+    {
+      if (ds && ds->first)
+      {
+           if (first_pts_hack == 0)
+               first_pts_hack = ds->first->pts;
+           else if (ds->first->pts <  first_pts_hack)
+               first_pts_hack = ds->first->pts;
+      }
+      if (ds && ds->current)
+      {
+           if (first_pts_hack == 0)
+               first_pts_hack = ds->current->pts;
+           else if (ds->first->pts <  first_pts_hack)
+               first_pts_hack = ds->current->pts;
+      }
+    }
+
     // take pts from "current" if we never read from it.
     if (ds->current && !ds->buffer_pos)
         return ds->current->pts;
--- mplayer/mplayer.c.org	2010-12-27 00:17:56.000000000 -0500
+++ mplayer/mplayer.c	2010-12-27 02:16:20.000000000 -0500
@@ -107,6 +107,9 @@
 
 char *heartbeat_cmd;
 
+extern double first_pts_hack;
+extern int live_pause_enable;
+
 #define ROUND(x) ((int)((x)<0 ? (x)-0.5 : (x)+0.5))
 
 #ifdef HAVE_RTC
@@ -2827,6 +2830,7 @@
 static int seek(MPContext *mpctx, struct seek_params seek)
 {
     struct MPOpts *opts = &mpctx->opts;
+    double time_to_end = 0;
 
     current_module = "seek";
     if (mpctx->stop_play == AT_END_OF_FILE)
@@ -2882,8 +2886,54 @@
     else if (seek.direction > 0)
         demuxer_style |= SEEK_FORWARD;
 
+    if (live_pause_enable && seek.direction > 0)
+    {
+      int osd_duration = 1000;
+      sh_video_t *sh_video = mpctx->demuxer->video->sh;
+      stream_t *st = mpctx->stream;
+      double amount_org = demuxer_amount, seek_1_second, size_now_to_end;
+      double new_pts = sh_video->pts - first_pts_hack;
+      off_t sz = 0;
+
+      seek_1_second = ((double)mpctx->demuxer->filepos / new_pts);
+
+      if (st)
+      {
+          (*st->control)(st,STREAM_CTRL_GET_SIZE, &sz);
+          if (sz > mpctx->demuxer->movi_end)
+             mpctx->demuxer->movi_end = sz;
+      }
+
+      if (st && demuxer_amount > 0 && mpctx->demuxer->movi_end > mpctx->demuxer->filepos)
+      {
+          if (sh_video)
+          {
+              double adjust = 0;
+              double time_now = (double)mpctx->demuxer->filepos / seek_1_second ;
+              double time_end = (double)mpctx->demuxer->movi_end / seek_1_second;
+
+              printf("..... time_now: %0.2f, time_end: %0.2f, diff: %0.2f, amount: %0.2f ------------ \n", time_now, time_end, time_end - time_now, demuxer_amount);
+
+              if (demuxer_amount >= time_end)
+              {
+                      if (time_end - time_now > live_pause_enable)
+                      {
+                          //printf("... ff requested but too big: %0.2f,  we can do this instead: %0.2f\n", demuxer_amount, time_now + live_pause_enable);  
+                          demuxer_amount = time_now + live_pause_enable - 1;
+                      }
+                      else
+                      {
+                          set_osd_msg(OSD_MSG_TEXT, 1, osd_duration, "LIVE: %0.2f", time_end - time_now);
+                          return -1;
+                      }
+              }
+          }
+      }
+    }
+    //printf("Seeking: time_to_end: %0.2f, amount: %0.2f, moo: %0.2f\n\n\n", time_to_end, demuxer_amount, time_to_end - demuxer_amount);
     int seekresult = demux_seek(mpctx->demuxer, demuxer_amount, audio_delay,
                                 demuxer_style);
+
     if (need_reset)
         reinit_decoders(mpctx);
     if (seekresult == 0)
--- mplayer/cfg-mplayer.h.org	2010-12-27 00:17:30.000000000 -0500
+++ mplayer/cfg-mplayer.h	2010-12-27 00:18:56.000000000 -0500
@@ -49,6 +49,8 @@
 
 extern const m_option_t dxr2_opts[];
 
+extern int live_pause_enable;
+
 const m_option_t vd_conf[]={
     {"help", "Use MPlayer with an appropriate video file instead of live partners to avoid vd.\n", CONF_TYPE_PRINT, CONF_NOCFG|CONF_GLOBAL, 0, 0, NULL},
     {NULL, NULL, 0, 0, 0, 0, NULL}
@@ -340,6 +342,7 @@
 #else
     {"tvscan", "MPlayer was compiled without TV interface support.\n", CONF_TYPE_PRINT, 0, 0, 0, NULL},
 #endif /* CONFIG_TV */
+    {"livepause", &live_pause_enable, CONF_TYPE_INT, CONF_RANGE, 0, 60, NULL},
 
     OPT_FLAG_ON("list-properties", list_properties, CONF_GLOBAL),
     {"identify", &mp_msg_levels[MSGT_IDENTIFY], CONF_TYPE_FLAG, CONF_GLOBAL, 0, MSGL_V, NULL},
--- mplayer/libvo/vo_vdpau.c.org	2010-12-27 00:06:02.000000000 -0500
+++ mplayer/libvo/vo_vdpau.c	2010-12-27 00:09:16.000000000 -0500
@@ -97,7 +97,13 @@
 #undef VDP_FUNCTION
 };
 
+int crop_top = 0;
+int crop_bottom = 0;
+int crop_left = 0;
+int crop_right = 0;
+
 struct vdpctx {
+
     struct vdp_functions *vdp;
 
     VdpDevice                          vdp_device;
@@ -380,10 +385,13 @@
     vc->out_rect_vid.x1 = dst_rect.right;
     vc->out_rect_vid.y0 = dst_rect.top;
     vc->out_rect_vid.y1 = dst_rect.bottom;
-    vc->src_rect_vid.x0 = src_rect.left;
-    vc->src_rect_vid.x1 = src_rect.right;
+    vc->src_rect_vid.x0 = src_rect.left + crop_left;
+    vc->src_rect_vid.x1 = src_rect.right + crop_right;
     vc->src_rect_vid.y0 = vc->flip ? src_rect.bottom : src_rect.top;
+    vc->src_rect_vid.y0 += crop_top;
     vc->src_rect_vid.y1 = vc->flip ? src_rect.top    : src_rect.bottom;
+    vc->src_rect_vid.y1 += crop_bottom;
+
     vc->border_x        = borders.left;
     vc->border_y        = borders.top;
 #ifdef CONFIG_FREETYPE
@@ -1633,6 +1641,10 @@
         {"queuetime_windowed", OPT_ARG_INT, &vc->flip_offset_window, NULL},
         {"queuetime_fs", OPT_ARG_INT, &vc->flip_offset_fs, NULL},
         {"output_surfaces", OPT_ARG_INT, &vc->num_output_surfaces, NULL},
+        {"crop_top",    OPT_ARG_INT,  &crop_top,    NULL},
+        {"crop_bottom", OPT_ARG_INT,  &crop_bottom, NULL},
+        {"crop_left",   OPT_ARG_INT,  &crop_left,   NULL},
+        {"crop_right",  OPT_ARG_INT,  &crop_right,  NULL},
         {NULL}
     };
     if (subopt_parse(arg, subopts) != 0) {

