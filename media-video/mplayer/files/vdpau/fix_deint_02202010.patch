--- libvo/vo_vdpau.c.org	2010-02-20 17:12:09.651026653 -0500
+++ libvo/vo_vdpau.c	2010-02-20 17:27:27.443773700 -0500
@@ -226,7 +226,7 @@
 {
     VdpTime dummy;
     VdpStatus vdp_st;
-    int i;
+    int i, j=1;
     if (vid_surface_num < 0)
         return;
 
@@ -250,11 +250,12 @@
                                                                  output_surface,
                                                                  &dummy);
         CHECK_ST_WARNING("Error when calling vdp_presentation_queue_block_until_surface_idle")
-
+        if (deint==2)
+           j = 0;
         vdp_st = vdp_video_mixer_render(video_mixer, VDP_INVALID_HANDLE, 0,
                                         field, 2, deint_surfaces + 1,
                                         deint_surfaces[0],
-                                        1, &surface_render[vid_surface_num].surface,
+                                        j, &surface_render[vid_surface_num].surface,
                                         &src_rect_vid,
                                         output_surface,
                                         NULL, &out_rect_vid, 0, NULL);
@@ -480,6 +481,68 @@
         &vid_height,
         &vdp_chroma_type
     };
+
+    features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL;
+    features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL;
+    features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_INVERSE_TELECINE;
+    features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION;
+    features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_SHARPNESS;
+
+    if (hqscaling)
+        features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_HIGH_QUALITY_SCALING_L1 + (hqscaling - 1);
+
+    vdp_st = vdp_video_mixer_create(vdp_device, feature_count, features,
+                                    VDP_NUM_MIXER_PARAMETER,
+                                    parameters, parameter_values,
+                                    &video_mixer);
+    CHECK_ST_ERROR("Error when calling vdp_video_mixer_create")
+
+    if (deint >= 3)
+    {
+        VdpVideoMixerFeature _features[] = { VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL,
+                                             VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL };
+        VdpBool _feature_enables[2] = {VDP_FALSE, VDP_FALSE};
+
+        switch (deint)
+        {
+            case 3:
+                _feature_enables[0] = VDP_TRUE;
+            break;
+
+            case 4:
+                _feature_enables[1] = VDP_TRUE;
+            break;
+
+            case 5:
+                _feature_enables[1] = VDP_TRUE;
+                _feature_enables[0] = VDP_TRUE;
+            break;
+        }
+        vdp_video_mixer_set_feature_enables(video_mixer, 2, _features, _feature_enables);
+    }
+
+    if (denoise || sharpen)
+    {
+        VdpVideoMixerFeature _features[] = { VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION,
+                                             VDP_VIDEO_MIXER_FEATURE_SHARPNESS };
+        VdpBool _feature_enables[2] = {VDP_FALSE, VDP_FALSE};
+
+        if (denoise && denoise > 0)
+            _feature_enables[0] = VDP_TRUE;
+
+        if (sharpen)
+            _feature_enables[1] = VDP_TRUE;
+
+        vdp_video_mixer_set_feature_enables(video_mixer, 2, _features, _feature_enables);
+
+        if (denoise && denoise > 0)
+            vdp_video_mixer_set_attribute_values(video_mixer, 1, denoise_attrib, denoise_value);
+
+        if (sharpen)
+            vdp_video_mixer_set_attribute_values(video_mixer, 1, sharpen_attrib, sharpen_value);
+    }
+
+/*
     features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL;
     if (deint == 4)
         features[feature_count++] = VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL;
@@ -508,6 +571,7 @@
         vdp_video_mixer_set_attribute_values(video_mixer, 1, denoise_attrib, denoise_value);
     if (sharpen)
         vdp_video_mixer_set_attribute_values(video_mixer, 1, sharpen_attrib, sharpen_value);
+*/
     if (!chroma_deint)
         vdp_video_mixer_set_attribute_values(video_mixer, 1, skip_chroma_attrib, skip_chroma_value_ptr);
 
